package org.spe.biologicaldata.webapplication;

import lombok.Getter;
import lombok.Setter;

import javax.persistence.*;
import java.util.Date;

/**
 * A class representing the information associated with an uploaded image.
 * Since the images are believed to represent pages of diaries / books,
 * relevant information for identifying that diary / book is also present
 */
@Entity @Table(name = "images")
class Image {

    /**
     * The id of the row, primary key
     */
    @Id @GeneratedValue(strategy = GenerationType.AUTO) @Column(name = "id") @Getter @Setter
    private Long id;

    /**
     * The path Url to where the image is stored
     */
    @Column(name = "image_url", nullable = false, unique = true) @Getter @Setter
    private String imageUrl;

    /**
     * The title of the image, what the image represents, for example the book
     * where it came from and
     */
    @Column(name="title", nullable = false) @Getter @Setter
    private String title;

    /**
     * The author of the book depicted in the image
     */
    @Column(name="author") @Getter @Setter
    private String author;

    /**
     * The year or time interval when the book was written, or it is
     * believed to be written
     */
    @Column(name="written_date") @Getter @Setter
    private String writtenDate;

    /**
     * The number of the page in the book that the image depicts
     */
    @Column(name="page") @Getter @Setter
    private String page;

    /**
     * The date the image it was added to the database
     */
    @Column(name="added_date", nullable = false) @Getter @Setter
    private Date addedDate;

    /**
     * The description of the image, if the title is not enough
     */
    @Column(name="description") @Getter @Setter
    private String description;

    /**
     * The text present in the image, obtained through image recognition
     */
    @Column(name="transcription") @Getter @Setter
    private String transcription;

    /**
     * Empty constructor, all fields are defaults, except id which is autogenerated and
     * addedDate which represents the date when this object was created
     */
    public Image() {
        this.imageUrl = "";
        this.title = "";
        this.author = "";
        this.writtenDate = "";
        this.page = "";
        this.addedDate = new Date();
        this.description = "";
        this.transcription = "";
    }

    /**
     * Full constructor, including all the information about the image, apart from transcription
     * which is believed to be processed later / in a longer period of time
     * @param imageUrl The path Url to where the image is stored
     * @param title The title of the image, what the image represents, for example the book
     *                  where it came from and
     * @param author The author of the book depicted in the image
     * @param writtenDate The year or time interval when the book was written, or it is
     *                       believed to be written
     * @param page The number of the page in the book that the image depicts
     * @param description The description of the image, if the title is not enough
     */
    public Image(String imageUrl, String title, String author, String writtenDate,
                        String page, String description) {
        this.imageUrl = imageUrl;
        this.title = title;
        this.author = author;
        this.writtenDate = writtenDate;
        this.page = page;
        this.addedDate = new Date();
        this.description = description;
        this.transcription = "";
    }
}
